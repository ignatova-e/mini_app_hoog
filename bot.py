# TOKEN = "7257113754:AAEH7m3Fu0eOOMzmNB3Kgz4mtk6j7a33sGA"
# CHANNEL_ID = "@testtestt23e" 

from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update, WebAppInfo, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup

TOKEN = "7257113754:AAEH7m3Fu0eOOMzmNB3Kgz4mtk6j7a33sGA"
CHANNEL_ID = "@testtestt23e"  # –ü–æ–¥—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∫–∞–Ω–∞–ª–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ
async def send_and_pin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton("üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", url="https://ignatova-e.github.io/mini_app_hoog/")
    ]])
    sent_msg = await context.bot.send_message(
        chat_id=CHANNEL_ID,
        text="üìå –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π:",
        reply_markup=keyboard
    )
    await context.bot.pin_chat_message(chat_id=CHANNEL_ID, message_id=sent_msg.message_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[
        KeyboardButton("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", web_app=WebAppInfo(url="https://ignatova-e.github.io/mini_app_hoog/"))
    ]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–°–∞–ª—é—Ç, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –ù–µ–∑–Ω–∞–π–∫–∞! ü§ó\n–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, —á–µ–∫–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=reply_markup
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
    app.add_handler(CommandHandler("pin", send_and_pin))  # –ö–æ–º–∞–Ω–¥–∞ /pin

    app.run_polling()

if __name__ == '__main__':
    main()
