# TOKEN = "7257113754:AAEH7m3Fu0eOOMzmNB3Kgz4mtk6j7a33sGA"
# CHANNEL_ID = "@testtestt23e" 

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo, Update
from telegram.ext import Application, CommandHandler, ContextTypes

# üîê –¢–æ–∫–µ–Ω –∏ –∫–∞–Ω–∞–ª
TOKEN = "7257113754:AAEH7m3Fu0eOOMzmNB3Kgz4mtk6j7a33sGA"
CHANNEL_ID = "@testtestt23e"  # –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞

# üì¶ –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ª–∏—á–∫–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")

    try:
        keyboard = InlineKeyboardMarkup([[
            InlineKeyboardButton(
                text="üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π",
                web_app=WebAppInfo(url="https://ignatova-e.github.io/mini_app_hoog/")
            )
        ]])

        await update.message.reply_text(
            text="üìå –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π:",
            reply_markup=keyboard
        )
        print("‚û°Ô∏è –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–Ω–æ–ø–∫–∏: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–Ω–æ–ø–∫–∏.")

# üìå –ö–æ–º–∞–Ω–¥–∞ /pin ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–Ω–∞–ª
async def pin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üìå –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /pin")

    try:
        keyboard = InlineKeyboardMarkup([[
            InlineKeyboardButton(
                text="üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π",
                url="https://ignatova-e.github.io/mini_app_hoog/?start_param=1"
  # üëà –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –≤–µ—Å—Ç–∏ –≤ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
            )
        ]])

        sent_msg = await context.bot.send_message(
            chat_id=CHANNEL_ID,
            text="–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π:",
            reply_markup=keyboard
        )

        await context.bot.pin_chat_message(chat_id=CHANNEL_ID, message_id=sent_msg.message_id)
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏: {e}")
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª.")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("pin", pin))
    app.run_polling()

if __name__ == '__main__':
    main()